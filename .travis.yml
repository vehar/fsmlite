sudo: false

language: cpp

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 CXX=g++-6"
        - GCOV=gcov-6
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 CXX=g++-7"
        - GCOV=gcov-7
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 CXX=g++-7"
        - CXXFLAGS=-std=c++17
        - GCOV=gcov-7
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 CXX=g++-8"
        - GCOV=gcov-8
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 CXX=g++-8"
        - CXXFLAGS=-std=c++17
        - GCOV=gcov-8
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 CXX=clang++-5.0"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 CXX=clang++-6.0"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - clang-7
      env:
        - MATRIX_EVAL="CC=clang-7 CXX=clang++-7"

before_install:
  - pip install --user cpp-coveralls
  - eval "${MATRIX_EVAL}"

before_script:
  - sh autogen.sh

script:
  - ./configure --enable-coverage && make && make check

after_success:
  - if [ -n "$GCOV" ]; then coveralls --gcov "$GCOV" --gcov-options '\-lp'; fi
